[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Regression analysis (R notes)",
    "section": "",
    "text": "Preface\nThese are coding notes for the course STAT350."
  },
  {
    "objectID": "Rintro.html#installing-r",
    "href": "Rintro.html#installing-r",
    "title": "1  R: Introduction",
    "section": "1.1 Installing R",
    "text": "1.1 Installing R\nGo to the The Comprehensive R Archive Network (CRAN): https://cran.r-project.org/\n\n\n\nCRAN\n\n\nUnder “Download and Install R,” choose “Linux,” “MacOS X” or “Windows.” If you choose Windows, on the next page choose “base,” and on the following page choose “Download R 4.3.1 for Windows” to download the setup program.\nIf you choose MacOS X or Linux you will need to read through the instructions to find the downloads you need for your machine.\nOnce you have downloaded the setup program, execute it and follow the instructions for installing R on your system. If you have an earlier version of R already installed, you may continue to use it, or you can uninstall it and then install the most recent version, which is R 4.3.1."
  },
  {
    "objectID": "Rintro.html#installing-rstudio",
    "href": "Rintro.html#installing-rstudio",
    "title": "1  R: Introduction",
    "section": "1.2 Installing RStudio",
    "text": "1.2 Installing RStudio\nhttps://rstudio.com/products/rstudio/download/\nChoose your version: RStudio Desktop, Open Source License, Free. After you install RStudio, you can double click on it and open:\n\n\n\nR Studio\n\n\nUsually you will want to import data from a file corresponding to data associated with a homework problem. Such a file will usually end with the extensions *.txt or *.dat. The data files for this course will always be available on the CD that comes with the text and/or on the course web page. A data file will consist of columns of numbers, with nothing separating the columns but “white space.” If each column has a title on top describing what the data in the column represents (e.g., age, weight, income, etc.), we will say that the file has a header."
  },
  {
    "objectID": "Rintro.html#working-directory",
    "href": "Rintro.html#working-directory",
    "title": "1  R: Introduction",
    "section": "1.3 Working directory",
    "text": "1.3 Working directory\nThe easiest way to import the data into R and have it readily available for the current and future sessions is to first save the data file into your working directory. For example mine is C:\\stat350.\nTo set up the working directory, select the project option by choosing File menu, then New Project, and then Create Project from Existing Directory.\nTo start writing a new R script, navigate to the New File option in the File menu, and select Quarto Document. This will create a *.qmd file. You can write both code and formatted-text in this document. When working on assignment / exam problems, you will work on the *.qmd file, render it as HTML and then submit. You can view some examples on how to write R code and text in a *.qmd file and render it as HTML here.\nFor rough work, i.e., work that won’t be graded, you may use the R script option to write code."
  },
  {
    "objectID": "Rintro.html#getting-started-with-code",
    "href": "Rintro.html#getting-started-with-code",
    "title": "1  R: Introduction",
    "section": "1.4 Getting started with code",
    "text": "1.4 Getting started with code\n\n1.4.1 Reading data\nSuppose you want to work with the data from Problem 19 of Chapter 1, which is in a file named CH01PR19.txt which you have saved from the CD or the course web page in the Datasets folder within your R working directory. Assume the file has no header. You will want to create a Table object in R containing this data. First choose an appropriate name for the table. Assume you choose to name it Data. Then, you can execute the following code :\n\nData &lt;- read.table(\"./Datasets/CH01PR19.txt\")\n\nThen there will be a Table object in R named Data containing the data in rows and columns. To view it, you would type\n\nData\n\nHowever, if it is a large file, you might not be able to view the whole table at once. In that case, you may use the head() function, which will display only the first 6 rows of Data:\n\nhead(Data)\n\n     V1 V2\n1 3.897 21\n2 3.885 14\n3 3.778 28\n4 2.540 22\n5 3.028 21\n6 3.865 31\n\n\nNote that, in the absence of a header, the columns will be named V1, V2, etc., and the rows will be numbered.\nNow if the file does have a header (which you may have added yourself), you need to change the above command to:\n\nData &lt;- read.table(\"CH01PR19.txt\", header=TRUE)\n\nIn this case, when you view the file you will see the title for each column at the top of each column instead of V1, V2, etc. R regards these titles as names for the columns, and not as data.\nIf you want to load the data file from some other directory, you need to type the full path name in the read.table() command. For instance,\n\nData &lt;- read.table(file=\"C:/stat350/CH01PR19.txt\", header=FALSE) \n\nYou may read data manually as well. Here both Return and New are vectors.\n\nReturn &lt;- c(74,66,81,52,73,62,52,45,62,46,60,46,38)\nNew &lt;-c(5,6,8,11,12,15,16,17,18,18,19,20,20)\n\n\n\n1.4.2 Renaming columns\nNow suppose the file Data has two columns, and the first column is the GPA, while the second column is ACT score. If you would like to rename the columns in your R data table so that each column has a descriptive title, you could give the R command:\n\nnames(Data) &lt;- c(\"GPA\", \"ACT\")\n\nThen when you view the file the titles of the columns will have the new names you assigned:\n\nhead(Data)\n\n    GPA ACT\n1 3.897  21\n2 3.885  14\n3 3.778  28\n4 2.540  22\n5 3.028  21\n6 3.865  31\n\n\nNote that you can also give the columns these titles in the data file before you load it into R, and then use the header = TRUE setting when loading. Also, to avoid errors, you should never include a space in the title of any column\n\n\n1.4.3 Exporting data\nSuppose you wish to export Data to file Intro.csv in your folder.\n\nwrite.table(Data, \"C:/stat350/Intro.csv\", col.names=TRUE, sep=\",\")\n\nSuppose you wish to export Data to Intro.txt with a tab delimiter:\n\nwrite.table(Data, \"C:/stat350/Intro.txt\", col.names=TRUE, sep=\"\\t\")\n\nYou may export R objects to other file types in a similar manner.\n\n\n1.4.4 R environment\nIf you want to see which R objects are currently in your R environment, you can type:\n\nls()\n\nYou may also see these objects at the top right corner of the R Studio interface.\nIf you no longer need one or more of these objects, you can remove them. For instance, if you are done with Data, you can type:\n\nrm(Data)\n\nThen Data will no longer be in your current R environment. When you quit R, if you wish to keep all the new objects in your current R environment, be sure to answer Yes when asked, Save workspace image?\n\n\n1.4.5 Scatter plots and simple linear regression\nSuppose the data for Problem 19 of Chapter One has been stored in an R object named Data which has two columns, the first column named GPA and the second column named ACT. You want to make a scatterplot in R with ACT scores on the horizontal axis and GPA on the vertical axis. The R command is:\n\nhead(Data)\n\n    GPA ACT\n1 3.897  21\n2 3.885  14\n3 3.778  28\n4 2.540  22\n5 3.028  21\n6 3.865  31\n\n\n\nplot(Data$ACT, Data$GPA)"
  },
  {
    "objectID": "Datasets.html",
    "href": "Datasets.html",
    "title": "Appendix A — Assignment templates and Datasets",
    "section": "",
    "text": "Assignment templates and datasets used in the book can be found here"
  }
]