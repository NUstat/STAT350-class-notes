---
title: "R: Introduction"
format:
    html:
      toc: true
      self-contained: true
editor_options: 
  chunk_output_type: console
---

## Installing R

Go to the The Comprehensive R Archive Network (CRAN): https://cran.r-project.org/

![CRAN](Rcran.jpg)

Under "Download and Install R," choose "Linux," "MacOS X" or "Windows." If you choose Windows, on the next page choose "base," and on the following page choose "Download R 4.3.1 for Windows" to download the setup program.

If you choose MacOS X or Linux you will need to read through the instructions to find the downloads you need for your machine.

Once you have downloaded the setup program, execute it and follow the instructions for installing R on your system. If you have an earlier version of R already installed, you may continue to use it, or you can uninstall it and then install the most recent version, which is R 4.3.1.

## Installing RStudio

https://rstudio.com/products/rstudio/download/

Choose your version: RStudio Desktop, Open Source License, Free. After you install RStudio, you can double click on it and open:

![R Studio](Rstudio.jpg)

Usually you will want to import data from a file corresponding to data associated with a homework problem.  Such a file will usually end with the extensions *\*.txt* or *\*.dat*.  The data files for this course will always be available on the CD that comes with the text and/or on the course web page.  A data file will consist of columns of numbers, with nothing separating the columns but “white space.”  If each column has a title on top describing what the data in the column represents (e.g., `age`, `weight`, `income`, etc.), we will say that the file has a *header*.  

## Working directory

The easiest way to import the data into R and have it readily available for the current and future sessions is to first save the data file into your working directory.  For example mine is `C:\stat350`. 

To set up the working directory, select the project option by choosing `File` menu,  then `New Project`, and then `Create Project from Existing Directory`.

To start writing a new R script, navigate to the `New File` option in the `File` menu, and select `Quarto Document`. This will create a *\*.qmd* file. You can write both code and formatted-text in this document. When working on assignment / exam problems, you will work on the *\*.qmd* file, render it as HTML and then submit. You can view some examples on how to write R code and text in a *\*.qmd* file and render it as HTML [here](https://quarto.org/docs/computations/r.html).

For rough work, i.e., work that won't be graded, you may use the `R script` option to write code.

## Getting started with code

### Reading data

Suppose you want to work with the data from Problem 19 of Chapter 1, which is in a file named `CH01PR19.txt` which you have saved from the CD or the course web page into your R working directory. Assume the file has no header.  You will want to create a Table object in R containing this data.  First choose an appropriate name for the table.  Assume you choose to name it `Data`.  Then, you can execute the following code :

```{r, eval=FALSE}
Data <- read.table("CH01PR19.txt")
```

Then there will be a Table object in R named `Data` containing the data in rows and columns.  To view it, you would type

```{r, eval=FALSE}
Data
```

However, if it is a large file, you might not be able to view the whole table at once.  In that case, you may use the `head()` function, which will display only the first 6 rows of `Data`:

```{r, eval=FALSE}
head(Data)
```

Note that, in the absence of a header, the columns will be named `V1`, `V2`, etc., and the rows will be numbered.

Now if the file does have a header *(which you may have added yourself)*, you need to change the above command to:

```{r, eval=FALSE}
Data <- read.table("CH01PR19.txt", header=TRUE)
```

In this case, when you view the file you will see the title for each column at the top of each column instead of `V1`, `V2`, etc.  R regards these titles as names for the columns, and not as data.

If you want to load the data file from some other directory, you need to type the full path name in the `read.table()` command. For instance,

```{r, eval=FALSE}
Data <- read.table(file="C:/stat350/CH01PR19.txt", header=FALSE) 
```

You may read data manually as well. Here both `Return` and `New` are vectors. 
```{r, eval=FALSE}
Return <- c(74,66,81,52,73,62,52,45,62,46,60,46,38)
New <-c(5,6,8,11,12,15,16,17,18,18,19,20,20)
```

### Renaming columns

Now suppose the file Data has two columns, and the first column is the `GPA`, while the second column is `ACT score`. If you would like to rename the columns in your R data table so that each column has a descriptive title, you could give the R command:

```{r, eval=FALSE}
names(Data) <- c("GPA", "ACT")
```

Then when you view the file the titles of the columns will have the new names you assigned.  Note that you can also give the columns these titles in the data file before you load it into R, and then use the `header=TRUE` setting when loading.  Also,  to avoid errors, you should never include a space in the title of any column

### Exporting data

Suppose you wish to export `Data` to file `Intro.csv` in your folder. 

```{r, eval=FALSE}
write.table(Data, "C:/stat350/Intro.csv", col.names=TRUE, sep=",")
```

Suppose you wish to export `Data` to `Intro.txt` with a tab delimiter:

```{r, eval=FALSE}
write.table(Data, "C:/stat350/Intro.txt", col.names=TRUE, sep="\t")

```

You may export R objects to other file types in a similar manner.

### R environment


If you want to see which R objects are currently in your R environment, you can type:

```{r, eval = FALSE}
ls()
```

You may also see these objects at the top right corner of the R Studio interface.

If you no longer need one or more of these objects, you can remove them.  For instance, if you are done with Data, you can type:

```{r, eval = FALSE}
rm(Data)
```

Then `Data` will no longer be in your current R environment.  When you quit R, if you wish to keep all the new objects in your current R environment, be sure to answer `Yes` when asked, `Save workspace image?`


## Scatter plots and simple linear regression





